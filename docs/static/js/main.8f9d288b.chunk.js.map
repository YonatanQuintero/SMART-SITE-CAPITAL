{"version":3,"sources":["utils/index.js","cons.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Datos/index.js","components/Oficina/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","CrowdFunding","Component","constructor","props","super","state","min","deposito","balance","accountAddress","porcentaje","dias","deposit","bind","estado","componentDidMount","Utils","window","setInterval","trx","getAccount","address","fromHex","inicio","substr","fin","texto","document","getElementById","innerHTML","tronUSDT","cons","contractUSDT","allowance","call","aprovado","parseInt","_hex","balanceOf","decimals","decimales","MIN_DEPOSIT","setState","amount","value","console","log","parseFloat","isNaN","approve","send","loc","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","investors","inversors","registered","sponsor","alert","render","className","type","id","placeholder","onClick","Datos","totalInvestors","totalInvested","totalRefRewards","setstate","esto","Investors","Invested","RefRewards","data-toggle","Oficina","direccion","link","balanceRef","totalRef","invested","paidAt","my","withdrawn","Link","withdraw","mydireccion","MYwithdrawable","My","cosa","available","toFixed","style","text","data-wow-duration","color","data-wow-delay","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","target","rel","FOUNDATION_ADDRESS","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TRONGRID_API","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.8f9d288b.chunk.js","sourcesContent":["const utils = {\n  tronWeb: false,\n  contract: false,\n\n  setTronWeb(tronWeb) {\n    this.tronWeb = tronWeb;\n  },\n\n  async setContract(tronWeb, contractAddress) {\n    this.contract = await tronWeb.contract().at(contractAddress);\n  }\n};\n\nexport default utils;\n","const proxy = \"https://proxy-ewozx.herokuapp.com/\";\nconst PRU = \"shasta.\";// red \n\nconst WS = \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\";//T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb recibe los huerfanos por defecto\n\nconst SC = \"TLmrvm6LShzFaxx5r4aP13H6m8wmcXsiym\";// direccion del contrato\n\nconst USDT = \"TKLyMxSriTLhQZyBPQJHdB1pGHA8bkpm8E\";// USDT contract or token trc20\n\nexport default {proxy, PRU, WS,  SC, USDT};\n","import cons from \"../../cons.js\";\n/// La direccion de su contrato acá ///////////////////////////////////\nconst contractAddress = cons.SC;\n\nexport default contractAddress;","import React, { Component } from \"react\";\nimport Utils from \"../../utils\";\nimport contractAddress from \"../Contract\";\n\nimport cons from \"../../cons.js\";\n\nexport default class CrowdFunding extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n      min: 10,\n      deposito: \"Cargando...\",\n      balance: \"Cargando...\",\n      accountAddress: \"Cargando...\",\n      porcentaje: \"Cargando...\",\n      dias: \"Cargando...\"\n\n    };\n\n    this.deposit = this.deposit.bind(this);\n    this.estado = this.estado.bind(this);\n  }\n\n  async componentDidMount() {\n    await Utils.setContract(window.tronWeb, contractAddress);\n    this.estado();\n    setInterval(() => this.estado(),3*1000);\n  };\n\n  async estado(){\n\n    var accountAddress =  await window.tronWeb.trx.getAccount();\n    accountAddress = window.tronWeb.address.fromHex(accountAddress.address);\n\n    var inicio = accountAddress.substr(0,4);\n    var fin = accountAddress.substr(-4);\n\n    var texto = inicio+\"...\"+fin;\n\n    document.getElementById(\"login\").innerHTML = '<a href=\"https://tronscan.io/#/address/'+accountAddress+'\" class=\"logibtn gradient-btn\">'+texto+'</a>';\n\n\n    var tronUSDT = await window.tronWeb;\n    var contractUSDT = await tronUSDT.contract().at(cons.USDT);\n\n    var aprovado = await contractUSDT.allowance(accountAddress,contractAddress).call();\n    aprovado = parseInt(aprovado._hex);\n\n    if (aprovado > 0) {\n      aprovado = \"Depositar\"\n    }else{\n      aprovado = \"Aprobar\"\n    }\n\n    var balance = await contractUSDT.balanceOf(accountAddress).call();\n    var decimales = await contractUSDT.decimals().call();\n    balance = parseInt(balance._hex)/10**decimales;\n\n    var MIN_DEPOSIT = await Utils.contract.MIN_DEPOSIT().call();\n    MIN_DEPOSIT = parseInt(MIN_DEPOSIT._hex)/10**decimales;\n\n    this.setState({\n      deposito: aprovado,\n      balance: balance,\n      decimales: decimales,\n      accountAddress: accountAddress,\n      porcentaje: 115,\n      dias: 90,\n      min: MIN_DEPOSIT\n    });\n  }\n\n\n  async deposit() {\n\n\n    const { min, deposito, decimales } = this.state;\n\n    var amount = document.getElementById(\"amount\").value;\n    console.log(amount);\n    amount = parseFloat(amount);\n    amount = parseInt(amount*10**decimales);\n\n    console.log(isNaN(amount));\n\n    var accountAddress =  await window.tronWeb.trx.getAccount();\n    accountAddress = window.tronWeb.address.fromHex(accountAddress.address);\n\n    var tronUSDT = await window.tronWeb;\n    var contractUSDT = await tronUSDT.contract().at(cons.USDT);\n\n    if (deposito === \"Aprobar\"){\n\n      await contractUSDT.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send();\n\n    }else{\n      var aprovado = await contractUSDT.allowance(accountAddress,contractAddress).call();\n      aprovado = parseInt(aprovado._hex);\n    }\n\n    if ( aprovado >= amount && aprovado > 0){\n\n        var loc = document.location.href;\n        if(loc.indexOf('?')>0){\n            var getString = loc.split('?')[1];\n            var GET = getString.split('&');\n            var get = {};\n            for(var i = 0, l = GET.length; i < l; i++){\n                var tmp = GET[i].split('=');\n                get[tmp[0]] = unescape(decodeURI(tmp[1]));\n            }\n\n            if (get['ref']) {\n              tmp = get['ref'].split('#');\n\n              var inversors = await Utils.contract.investors(tmp[0]).call();\n\n              console.log(inversors);\n\n              if ( inversors.registered ) {\n                document.getElementById('sponsor').value = tmp[0];\n              }else{\n                document.getElementById('sponsor').value = cons.WS;\n              }\n            }else{\n               document.getElementById('sponsor').value = cons.WS;\n            }\n\n        }else{\n\n            document.getElementById('sponsor').value = cons.WS;\n        }\n\n        var sponsor = document.getElementById(\"sponsor\").value;\n\n        var investors = await Utils.contract.investors(accountAddress).call();\n\n        if (investors.registered) {\n\n          sponsor = investors.sponsor;\n\n        }\n\n\n        if ( amount >= min ){\n\n          document.getElementById(\"amount\").value = \"\";\n\n          await Utils.contract.deposit(amount,sponsor).send();\n\n        }else{\n          window.alert(\"Please enter an amount greater than 10 USDT\");\n          document.getElementById(\"amount\").value = 10;\n        }\n\n\n\n    }else{\n\n      if (amount > min && aprovado > min) {\n\n        if ( amount > aprovado) {\n          if (aprovado <= 0) {\n            document.getElementById(\"amount\").value = min;\n            window.alert(\"You do not have enough funds in your account you place at least \"+min+\" USDT\");\n          }else{\n            document.getElementById(\"amount\").value = 10;\n            window.alert(\"You must leave 50 TRX free in your account to make the transaction\");\n          }\n\n\n\n        }else{\n\n          document.getElementById(\"amount\").value = amount;\n          window.alert(\"You must leave 50 TRX free in your account to make the transaction\");\n\n        }\n      }else{\n        window.alert(\"No tiene fondos suficientes en su cuenta porfavor recargue e intente nuevamente\");\n      }\n    }\n\n\n  };\n\n\n  render() {\n\n    var min = this.state.min;\n\n    min = \"Minimo. \"+min+\" SITE\";\n\n    return (\n      <div className=\"card wow bounceInUp text-center\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Contrato V 1.0</h5>\n          <h6 className=\"card-text\">\n            Retorno: <strong>{this.state.porcentaje}%</strong><br />\n            Tiempo: <strong>{this.state.dias} días</strong><br />\n          </h6>\n\n          <div className=\"form-group\">Wallet\n          <p className=\"card-text\">\n            <strong>{this.state.accountAddress}</strong><br />\n          </p>\n          <p className=\"card-text\">\n            SITE disponible: <strong>{this.state.balance}</strong><br />\n          </p>\n            <input type=\"number\" className=\"form-control mb-20 text-center\" id=\"amount\" placeholder={min}></input>\n            <p className=\"card-text\">Debes de tener TRX para hacer la transacción</p>\n\n            <div className=\"btn btn-light\" onClick={() => this.deposit()}>{this.state.deposito}</div>\n\n          </div>\n\n        </div>\n      </div>\n\n\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Utils from \"../../utils\";\nimport contractAddress from \"../Contract\";\n\nimport cons from \"../../cons.js\";\n\nexport default class Datos extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      totalInvestors: 0,\n      totalInvested: 0,\n      totalRefRewards: 0\n    };\n\n    this.totalInvestors = this.totalInvestors.bind(this);\n  }\n\n  async componentDidMount() {\n    await Utils.setContract(window.tronWeb, contractAddress);\n    setInterval(() => this.totalInvestors(),1000);\n  };\n\n  async totalInvestors() {\n\n    let esto = await Utils.contract.setstate().call();\n\n    var tronUSDT = await window.tronWeb;\n    var contractUSDT = await tronUSDT.contract().at(cons.USDT);\n    var decimales = await contractUSDT.decimals().call();\n    //console.log(esto);\n    this.setState({\n      totalInvestors: parseInt(esto.Investors._hex),\n      totalInvested: parseInt(esto.Invested._hex)/10**decimales,\n      totalRefRewards: parseInt(esto.RefRewards._hex)/10**decimales\n\n    });\n\n  };\n\n  render() {\n    const { totalInvestors, totalInvested, totalRefRewards } = this.state;\n\n    return (\n      <div className=\"row counters\">\n\n          <div className=\"col-lg-4 col-12 text-center\">\n            <span data-toggle=\"counter-up\">{totalInvestors}</span>\n            <p>Inversores Globales</p>\n          </div>\n\n          <div className=\"col-lg-4 col-12 text-center\">\n            <span data-toggle=\"counter-up\">{totalInvested} SITE</span>\n            <p>Invertido en Plataforma</p>\n          </div>\n\n          <div className=\"col-lg-4 col-12 text-center\">\n            <span data-toggle=\"counter-up\">{totalRefRewards} SITE</span>\n            <p>Total Recompensas por Referidos</p>\n          </div>\n\n        </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport Utils from \"../../utils\";\nimport contractAddress from \"../Contract\";\n\nimport cons from \"../../cons.js\";\n\nexport default class Oficina extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      direccion: \"\",\n      link: \"Haz una inversión para obtener el LINK de referido\",\n      registered: false,\n      balanceRef: 0,\n      totalRef: 0,\n      invested: 0,\n      paidAt: 0,\n      my: 0,\n      withdrawn: 0\n\n    };\n\n    this.Investors = this.Investors.bind(this);\n    this.Link = this.Link.bind(this);\n    this.withdraw = this.withdraw.bind(this);\n  }\n\n  async componentDidMount() {\n    await Utils.setContract(window.tronWeb, contractAddress);\n    setInterval(() => this.Investors(),500);\n    setInterval(() => this.Link(),1000);\n  };\n\n  async Link() {\n    const {registered} = this.state;\n    if(registered){\n\n      let loc = document.location.href;\n      if(loc.indexOf('?')>0){\n        loc = loc.split('?')[0]\n      }\n      let mydireccion = await window.tronWeb.trx.getAccount();\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\n      mydireccion = loc+'?ref='+mydireccion;\n      this.setState({\n        link: mydireccion,\n      });\n    }else{\n      this.setState({\n        link: \"Haz una inversión para obtener el LINK de referido\",\n      });\n    }\n  }\n\n\n  async Investors() {\n\n    let direccion = await window.tronWeb.trx.getAccount();\n    let esto = await Utils.contract.investors(direccion.address).call();\n    let My = await Utils.contract.MYwithdrawable().call();\n    \n    var tronUSDT = await window.tronWeb;\n    var contractUSDT = await tronUSDT.contract().at(cons.USDT);\n    var decimales = await contractUSDT.decimals().call();\n\n    this.setState({\n      direccion: window.tronWeb.address.fromHex(direccion.address),\n      registered: esto.registered,\n      balanceRef: parseInt(esto.balanceRef._hex)/10**decimales,\n      totalRef: parseInt(esto.totalRef._hex)/10**decimales,\n      invested: parseInt(esto.invested._hex)/10**decimales,\n      paidAt: parseInt(esto.paidAt._hex)/10**decimales,\n      my: parseInt(My.amount._hex)/10**decimales,\n      withdrawn: parseInt(esto.withdrawn._hex)/10**decimales\n    });\n\n  };\n\n  async withdraw(){\n    var cosa = await Utils.contract.withdraw().send();\n    console.log(cosa);\n  };\n\n\n  render() {\n    var { balanceRef, totalRef, invested,  withdrawn , my, direccion, link} = this.state;\n\n    var available = (balanceRef+my);\n    available = available.toFixed(6);\n    available = parseFloat(available);\n\n    balanceRef = balanceRef.toFixed(6);\n    balanceRef = parseFloat(balanceRef);\n\n    totalRef = totalRef.toFixed(6);\n    totalRef = parseFloat(totalRef);\n\n    invested = invested.toFixed(6);\n    invested = parseFloat(invested);\n\n    withdrawn = withdrawn.toFixed(6);\n    withdrawn = parseFloat(withdrawn);\n\n    my = my.toFixed(6);\n    my = parseFloat(my);\n\n    return (\n\n      <div className=\"container\">\n\n      <header style={{'textAlign': 'center'}} className=\"section-header\">\n        <h3 className=\"white\"><span style={{'fontWeight': 'bold'}}>\n        Mi Oficina:</span> <br></br>\n        <span style={{'fontSize': '11px'}}>{direccion}</span></h3><br></br>\n        <h3 className=\"white\" style={{'fontWeight': 'bold'}}>Link de referido:</h3>\n        <h6 className=\"white\" style={{'padding': '1.5em', 'fontSize': '11px'}}><a href={link}>{link}</a> <br /><br />\n        <CopyToClipboard text={link}>\n          <button type=\"button\" className=\"btn btn-info\">COPIAR</button>\n        </CopyToClipboard>\n        </h6>\n        <hr></hr>\n\n      </header>\n\n      <div className=\"row\">\n\n        <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-duration=\"1.4s\">\n          <div className=\"box\">\n            <div className=\"icon\"><i className=\"ion-ios-analytics-outline\" style={{color: '#ff689b'}}></i></div>\n            <h4 className=\"title\"><a href=\"#services\">{invested} SITE</a></h4>\n            <p className=\"description\">Total invertido</p>\n          </div>\n        </div>\n        <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-duration=\"1.4s\">\n          <div className=\"box\">\n            <div className=\"icon\"><i className=\"ion-ios-bookmarks-outline\" style={{color: '#e9bf06'}}></i></div>\n            <h4 className=\"title\"><a href=\"#services\">{totalRef} SITE</a></h4>\n            <p className=\"description\">Total ganancias por referidos</p>\n          </div>\n        </div>\n\n        <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\n          <div className=\"box\">\n            <div className=\"icon\"><i className=\"ion-ios-paper-outline\" style={{color: '#3fcdc7'}}></i></div>\n            <p className=\"description\">Mi balance</p>\n            <h4 className=\"title\"><a href=\"#services\">{my} SITE</a></h4>\n\n          </div>\n        </div>\n        <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\n          <div className=\"box\">\n            <div className=\"icon\"><i className=\"ion-ios-paper-outline\" style={{color: '#3fcdc7'}}></i></div>\n            <p className=\"description\">Balance por referidos</p>\n            <h4 className=\"title\"><a href=\"#services\"> {balanceRef} SITE</a></h4>\n\n          </div>\n        </div>\n\n        <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\n          <div className=\"box\">\n            <div className=\"icon\"><i className=\"ion-ios-speedometer-outline\" style={{color:'#41cf2e'}}></i></div>\n            <h4 className=\"title\"><a href=\"#services\">Disponible</a></h4>\n            <p className=\"description\">{available} SITE <button type=\"button\" className=\"btn btn-info\" onClick={() => this.withdraw()}>Retirar</button></p>\n          </div>\n        </div>\n        <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-delay=\"0.2s\" data-wow-duration=\"1.4s\">\n          <div className=\"box\">\n            <div className=\"icon\"><i className=\"ion-ios-clock-outline\" style={{color: '#4680ff'}}></i></div>\n            <h4 className=\"title\"><a href=\"#services\">Retirado</a></h4>\n            <p className=\"description\">{withdrawn} SITE</p>\n          </div>\n        </div>\n\n      </div>\n\n    </div>\n\n    );\n  }\n}\n","import React from 'react';\n\nimport TronLinkLogo from './TronLinkLogo.png';\n\n\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\n\nconst logo = (\n    <div className='col-sm-4 text-center'>\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\n    </div>\n);\n\nconst openTronLink = () => {\n    window.open(WEBSTORE_URL, '_blank');\n};\n\nconst TronLinkGuide = props => {\n    const {\n        installed = false\n    } = props;\n\n    if(!installed) {\n        return (\n            <div className='row' onClick={ openTronLink }>\n                <div className='col-sm-8'>\n                    <h1>Instalar TronLink</h1>\n                    <p>\n                        To create a post or tip others you must install TronLink. TronLink es una wallet de TRON que puede descargar en <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>Chrome Webstore</a>.\n                        Una vez instalado, vuelva y refresque la pagina.\n                    </p>\n                </div>\n                { logo }\n            </div>\n        );\n    }\n\n    return (\n    <> <a href='/'>\n\n        <div className='tronLink row' style={{'padding': '3em','color': 'black','textDecoration': 'none'}}>\n\n            <div className='info col-sm-8'>\n                <h1>Requiere Iniciar Sesión</h1>\n                <p>\n                    TronLink está instalado pero inicia sesion primero. Abre TronLink en la barra del nabegador y configura tu primer wallet o desbloquea una wallet ya creada.\n                </p>\n            </div>\n            { logo }\n        </div>\n        </a>\n\n    </>\n    );\n};\n\nexport default TronLinkGuide;\n","import React, { Component } from \"react\";\nimport TronWeb from \"tronweb\";\n\nimport Utils from \"../../utils\";\nimport CrowdFunding from \"../CrowdFunding\";\nimport Datos from \"../Datos\";\nimport Oficina from \"../Oficina\";\nimport TronLinkGuide from \"../TronLinkGuide\";\n\n\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      }\n    };\n  }\n\n  async componentDidMount() {\n    await new Promise(resolve => {\n      const tronWebState = {\n        installed: !!window.tronWeb,\n        loggedIn: window.tronWeb && window.tronWeb.ready\n      };\n\n      if (tronWebState.installed) {\n        this.setState({\n          tronWeb: tronWebState\n        });\n\n        return resolve();\n      }\n\n      let tries = 0;\n\n      const timer = setInterval(() => {\n        if (tries >= 10) {\n\n          const TRONGRID_API = \"https://api.trongrid.io\";\n\n          window.tronWeb = new TronWeb(\n            TRONGRID_API,\n            TRONGRID_API,\n            TRONGRID_API\n          );\n\n          this.setState({\n            tronWeb: {\n              installed: false,\n              loggedIn: false\n            }\n          });\n          clearInterval(timer);\n          return resolve();\n        }\n\n        tronWebState.installed = !!window.tronWeb;\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n        if (!tronWebState.installed) {\n          return tries++;\n        }\n\n        this.setState({\n          tronWeb: tronWebState\n        });\n\n        resolve();\n      }, 100);\n    });\n\n    if (!this.state.tronWeb.loggedIn) {\n      // Set default address (foundation address) used for contract calls\n      // Directly overwrites the address object if TronLink disabled the\n      // function call\n      window.tronWeb.defaultAddress = {\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n        base58: FOUNDATION_ADDRESS\n      };\n\n      window.tronWeb.on(\"addressChange\", () => {\n        if (this.state.tronWeb.loggedIn) {\n          return;\n        }\n\n        this.setState({\n          tronWeb: {\n            installed: true,\n            loggedIn: true\n          }\n        });\n      });\n    }\n\n    Utils.setTronWeb(window.tronWeb);\n  }\n\n  render() {\n    if (!this.state.tronWeb.installed) return (\n      <>\n        <div className=\"container\">\n          <TronLinkGuide />\n        </div>\n      </>\n      );\n\n    if (!this.state.tronWeb.loggedIn) return (\n      <>\n        <div className=\"container\">\n          <TronLinkGuide installed />\n        </div>\n      </>\n      );\n\n    return (\n\n      <div>\n        <div>\n          <section id=\"why-us\" className=\"wow fadeIn\">\n            <div className=\"container\">\n              <header className=\"section-header\">\n                  <h3>Has tu inversión</h3>\n              </header>\n              <div  className=\"row row-eq-height justify-content-center\">\n                <CrowdFunding />\n              </div>\n              <div >\n                <Datos />\n              </div>\n            </div>\n          </section>\n\n          <section id=\"services\" className=\"section-bg\">\n            <Oficina />\n          </section>\n        </div>\n      </div>\n    );\n\n  }\n}\nexport default App;\n\n// {tWeb()}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\n\nvar root = document.getElementById(\"root\");\n\n\nReactDOM.render(<App />, root);\n\n\n\n\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}